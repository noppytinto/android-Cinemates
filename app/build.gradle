plugins {
    id 'com.android.application'

    // for safeargs
    id 'androidx.navigation.safeargs'

    // firebase
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.3" // if some problems, change here

    packagingOptions {
        pickFirst 'META-INF/LICENSE.txt' // picks the JavaMail license file
    }

    defaultConfig {
        applicationId "mirror42.dev.cinemates"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true   // defuult value: false
            shrinkResources true // default value: false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // **** define your res folders ****
    sourceSets {
        main.res.srcDirs += [
                'src/main/java/mirror42/dev/cinemates/ui/explore/res',
                'src/main/java/mirror42/dev/cinemates/ui/home/res',
                'src/main/java/mirror42/dev/cinemates/ui/login/res',
                'src/main/java/mirror42/dev/cinemates/ui/moviedetails/res',
                'src/main/java/mirror42/dev/cinemates/ui/search/res',
                'src/main/java/mirror42/dev/cinemates/ui/signup/res',
                'src/main/java/mirror42/dev/cinemates/ui/userprofile/res',
                'src/main/java/mirror42/dev/cinemates/ui/resetPassword/res',
                'src/main/java/mirror42/dev/cinemates/ui/notification/res',
                'src/main/java/mirror42/dev/cinemates/ui/post/res',
                'src/main/java/mirror42/dev/cinemates/ui/reaction/res',
                'src/main/java/mirror42/dev/cinemates/ui/list/res',
                'src/main/java/mirror42/dev/cinemates/ui/dialog/res',
                'src/main/java/mirror42/dev/cinemates/ui/changePassword/res',
                'src/main/java/mirror42/dev/cinemates/ui/privacyPolicy/res',
                'src/main/java/mirror42/dev/cinemates/res'

        ]
    }
}

dependencies {
    def work_version = "2.5.0"
    def material_components_version = "1.3.0"

    // android libraries
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment:2.3.3'
    implementation 'androidx.navigation:navigation-ui:2.3.3'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'
    // junit 4
    testImplementation 'junit:junit:4.13.1'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.3.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:1.10.19'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // junit 5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    // firebase
    implementation platform('com.google.firebase:firebase-bom:26.2.0')
    implementation 'com.google.firebase:firebase-config'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-perf'
    implementation 'com.firebaseui:firebase-ui-auth:6.4.0'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.google.firebase:firebase-storage'
    implementation 'com.google.firebase:firebase-messaging'
    // security
    implementation "androidx.security:security-crypto:1.1.0-alpha03"
    // work manager
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-rxjava2:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"






    //----------------------------
    //             MY DEPENDENCIES
    //----------------------------

    // glide dependency
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // network libraries
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'

    // cloudinary
    implementation group: 'com.cloudinary', name: 'cloudinary-android', version: '1.30.0'

    // rxjava
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.4'
    implementation 'com.jakewharton.rxbinding4:rxbinding:4.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.github.akarnokd:rxjava3-retrofit-adapter:3.0.0"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.github.FrangSierra:RxFirebase:1.5.6'

    // javax.mail
    implementation 'com.sun.mail:android-mail:1.6.2'
    implementation 'com.sun.mail:android-activation:1.6.2'

    //room
    def room_version = "2.2.6"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"


    // leaks manager
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'

}